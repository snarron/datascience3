getpw()
getwd()
1 +1
help
help()
!help
help function
help(function)
?
a
?function
function
?
function
;
help(?)
help ?
.
getwd()
setwd(./Documents/github/datascience3)
setwd('./Documents/github/datascience3')
getwd()
if (!file.exists("data")) {}
if (!file.exists("data")) {dir.create("data")}
file.exists("hello")
file.exists("data")
download.file()
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
fileUrl
download.file(fileUrl, destfile = "./data/camera.csv", method = curl)
download.file(fileUrl, destfile = "./data/camera.csv", method = 'curl')
list.file("./data")
list.files("./data")
dataDownloaded <- date()
dateDownloaded
dateDownloaded <- date()
dateDownloaded
if (!file.exists("data")){dir.create("data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl, destfile="./data/cameras.xlsx", method="curl")
dateDownloaded()
dateDownloaded <- date()
library(xlsx)
a = [0,1,2,3]
library(xml)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootnode[[1]][[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode,"//name",xmlValue)
xpathSApply(rootNode,"//price",xmlValue)
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
teams <- xpathSApply(doc,/"//li[@class='team-name']",xmlValue)
scores
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
teams <- xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores
teams
scores
scores[[1]]
scores
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
teams <- xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
jsonData$owner$login
jsonData$owner
myjson <- toJSON(iris, pretty=TRUE)
cat(myjson)
myjson
iris2 <- fromJSON(myJSON)
head(iris2)
iris2 <- fromJSON(myjson)
head(iris2)
library(data.table)
DF = data.frame(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DF,3)
DT = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DF,3)
tables()
frames()
DT[2,]
DT[DT$y=='a']
DT[c(2,3)]
DT[,c(2,3)]
k = {print(10); 5}
print(k)
DT[,list(mean(x),sum(z))] # passing a list of functions
DT[,table(y)]
DT[,table(y)]
DT[,w:=z^2]
DT[,list(mean(x),sum(z))] # passing a list of functions
DT[,table(y)] # getting a table of y
DT[,w:=z^2] # := adds columns
DT2 <- DT
DT[, y:=2]
DT = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DF,3)
# see all the data tables in memory
tables()
# subsetting rows
DT[2,]
DT[DT$y=='a']
DT[c(2,3)]
# subsetting columns??
DT[,c(2,3)] # not really like data frames
# column subsetting in data.table
{ x = 1
y = 2
}
k = {print(10); 5} # prints 10
print(k) # prints 5
DT[,list(mean(x),sum(z))] # passing a list of functions
DT[,table(y)] # getting a table of y
# adding new columns
DT[,w:=z^2] # := adds columns
DT2 <- DT
DT[, y:=2]
head(DT2,n=3)
DT[,m {tmp <- (x+z); log2(tmp+5)}]
DT[,m:= {tmp <- (x+z); log2(tmp+5)}]
DT[,a:=x>0]
DT
DT[,b:= mean(x+w), by=a]
DT
set.seed(123);
DT <- data.table(x=sample(letters[1:3],1E5,TRUE))
DT[, .N, by=x]
.N
DT
DT[,.N]
DT[,.N,by=x]
DT$x
sDT <- data.table(x=rep(c("a","b","c"),each=100),y=rnorm(300))
DT <- data.table(x=rep(c("a","b","c"),each=100),y=rnorm(300))
setkey(DT,x)
DT['a']
DT[,.N,by=x]
DT['a',.N,by=x]
DT[,.N,by='a']
DT1 <- data.table(x=c('a','a','b','dt1'), y=1:4)
DT2 <- data.table(x=c('a','b','dt2'),z=5:7)
DT1
DT2
setkey(DT1,x); setkey(DT2,x)
merge(DT1,DT2)
big_df <- data.frame(x=rnorm(1E6), y=rnorm(1E6))
big_df
file <- tempfile()
write.table(big_df, file=file, row.names=FALSE, col.names=TRUE, sep="\t", quote=FALSE)
system.time(fread(file))
system.time(read.table(file, header=TRUE, sep="\t"))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileUrl, destfile="./data/american_community_survey.csv", method="curl")
content <- read.csv("./data/american_community_survey.csv")
content
dateDownloaded <- date()
content[,.N,by=VAL]
content$VAL
DF <- data.frame(content)
DF
DF[VAL]
DF[,.N]
DF[,,,]
DF[,,]
DF[,,by=VAL]
DF$VAL
DF[DF$VAL>16]
DF[VAL>16]
content$VAL
content[content$VAL>16]
content[[content$VAL>16]]
content[content$VAL]
content[VAL]
content[[VAL]]
DF[[VAL]]
DF[VAL]
DF$VAL[]
DF$VAL[VAL>16]
DF$VAL[DF>16]
DF$VAL[DF$VAL>16]
DF$VAL > 16
DF[DF$VAL > 16]
DF[VAL > 16]
nrow(DF)
nrow(DF$VAL[DF$VAL>13])
DF$VAL[DF$VAL>13]
nrow(na.omit(DF$VAL[DF$VAL>13]))
nrow(DF$VAL)
nrow(na.omit(DF[DF$VAL>13]))
DF$VAL[DF$VAL=24]
[DF$VAL=24]
DF$VAL
DF[DF$VAL=24]
DF[DF$VAL>24]
DF$VAL[DF$VAL>24]
DF$VAL[DF$VAL>=24]
table(DF$VAL[DF$VAL>=24])
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(fileUrl, destfile="./data/natural_gas_acquisition_program.xlsx", method="curl")
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx")
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", sheet=1)
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", 1)
content
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", 1 nrows=18-23, ncols=7-15)
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", 1, nrows=18-23, ncols=7-15)
content
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", 1, nrows=18:23, ncols=7:15)
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", 1, nrow=18:23, ncol=7:15, header=TRUE)
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", 1)
content[1]
content
dat <- content[[18:23]][[7:15]]
dat <- content[18:23][7:15]
dat <- content[18:23]
dat
content <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", 1, rowIndex=18:23, colIndex=7:15)
content
dat <- read.xlsx("./data/natural_gas_acquisition_program.xlsx", 1, rowIndex=18:23, colIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("./data/baltimore_restaurants.xml")
download.file(fileUrl, destfile="./data/baltimore_restaurants.xml", method="curl")
content <- read.xml("./data/baltimore_restaurants.xml")
content <- xmlTreeParse("./data/baltimore_restaurants.xml", internal=TRUE)
content <- xmlTreeParse("./data/baltimore_restaurants.xml", useInternal=TRUE)
content <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileUrl, destfile="./data/baltimore_restaurants.xml", method="curl")
content <- xmlTreeParse(fileUrl, useInternal=TRUE)
content <- xmlTreeParse("./data/baltimore_restaurants.xml", useInternal=TRUE)
content
doc <- xmlTreeParse("./data/baltimore_restaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode
name(rootNode)
names(rootNode)
xmlSApply(rootNode)
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode,"//Zip",xmlValue)
xpathSApply(rootNode,"/Zip",xmlValue)
rootNode[[1]]
rootNode[["zipcode"]]
rootNode[["row"]][["zipcode"]]
rootNode[["row"]]
rootNode$zipcode
xpathSApply(rootNode,"//name",xmlValue)
xpathSApply(rootNode,"//name",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue) = 21231
table(xpathSApply(rootNode,"//zipcode",xmlValue))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file("./data/american_community_survey_2006.csv", method="curl")
download.file(destfile="./data/american_community_survey_2006.csv", method="curl")
download.file(fileUrl, destfile="./data/american_community_survey_2006.csv", method="curl")
DT <- fread("./data/american_community_survey_2006.csv")
DT
file = tempfile()
file
write.table(DT, file=file, row.names=FALSE, col.names=TRUE, sep=",", quote=FALSE)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
"""Error: unexpected ';' in "system.time(mean(DT[DT$SEX==1,]$pwgtp15);"""
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileUrl, destfile="./data/baltimore_restaurants.xml", method="curl")
doc <- xmlTreeParse("./data/baltimore_restaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
table(xpathSApply(rootNode,"//zipcode",xmlValue))
sapply(split(DT$pwgtp15,DT$SEX),mean)
tapply(DT$pwgtp15,DT$SEX,mean)
